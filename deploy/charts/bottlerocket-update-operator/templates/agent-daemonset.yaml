---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: brupop
    app.kubernetes.io/part-of: brupop
    brupop.bottlerocket.aws/component: agent
  name: brupop-agent
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      brupop.bottlerocket.aws/component: agent
  template:
    metadata:
      labels:
        brupop.bottlerocket.aws/component: agent
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      namespace: {{ .Values.namespace }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: bottlerocket.aws/updater-interface-version
                    operator: In
                    values:
                      - 2.0.0
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
      {{- with .Values.placement.agent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.placement.agent.priorityClassName }}
      priorityClassName: {{ .Values.placement.agent.priorityClassName | quote }}
      {{- end }}
      containers:
        - command:
            - "./agent"
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: EXCLUDE_FROM_LB_WAIT_TIME_IN_SEC
              value: "{{ .Values.exclude_from_lb_wait_time_in_sec }}"
            - name: APISERVER_SERVICE_PORT
              value: "{{ .Values.apiserver_service_port }}"
            - name: LOGGING_FORMATTER
              value: "{{ .Values.logging.formatter }}"
            - name: LOGGING_ANSI_ENABLED
              value: "{{ .Values.logging.ansi_enabled }}"
            - name: TRACING_FILTER_DIRECTIVE
              value: "{{ .Values.logging.agent.tracing_filter }}"
          image: {{ .Values.image }}
          name: brupop
          resources:
            {{- toYaml .Values.resources.agent.resources | nindent 12 }}
          securityContext:
            seLinuxOptions:
              level: s0
              role: system_r
              type: super_t
              user: system_u
          volumeMounts:
            - mountPath: /run/api.sock
              name: bottlerocket-api-socket
            - mountPath: /bin/apiclient
              name: bottlerocket-apiclient
            - mountPath: /var/run/secrets/tokens/
              name: bottlerocket-agent-service-account-token
            - mountPath: /etc/brupop-tls-keys
              name: bottlerocket-tls-keys
      serviceAccountName: brupop-agent-service-account
      {{- with .Values.placement.apiserver.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - hostPath:
            path: /run/api.sock
            type: Socket
          name: bottlerocket-api-socket
        - hostPath:
            path: /bin/apiclient
            type: File
          name: bottlerocket-apiclient
        - name: bottlerocket-agent-service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: brupop-apiserver
                  path: bottlerocket-agent-service-account-token
        - name: bottlerocket-tls-keys
          secret:
            optional: false
            secretName: brupop-apiserver-client-certificate
